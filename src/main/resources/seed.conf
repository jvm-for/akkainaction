akka {
  loglevel = DEBUG
  stdout-loglevel = INFO
  //loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.Logging$DefaultLogger"]

  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  logger-startup-timeout = 30s
  default-dispatcher {
    fork-join-executor {
      parallelism-min = 8
    }
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }

    serialization-bindings {
      "scala.Product" = kryo
      //"akka.persistence.PersistentRepr" = kryo
    }
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?HOST}
      port = 2551
      port = ${?PORT}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://akkainaction@127.0.0.1:2551",
      "akka.tcp://akkainaction@127.0.0.1:2552",
      "akka.tcp://akkainaction@127.0.0.1:2553"
    ]

    roles = ["seed"]

    role {
      seed.min-nr-of-members = 1
    }
  }
}
